name: CI/CD Chat System

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (for better Docker builds)
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get current date for tag
        id: date
        run: echo "now=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image for server
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/chat-server:latest
            ${{ secrets.DOCKER_USERNAME }}/chat-server:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/chat-server:${{ steps.date.outputs.now }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment: production

    steps:
      - name: Deploy to remote server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            REPO_URL="https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}.git"
            DEPLOY_PATH="/home/${{ secrets.REMOTE_USER }}/chat_system"

            echo "Starting deployment on ${{ secrets.REMOTE_HOST }}..."

            if [ -d "$DEPLOY_PATH/.git" ]; then
              echo "Repository exists. Pulling latest changes..."
              cd "$DEPLOY_PATH" || { echo "Error: Could not navigate to $DEPLOY_PATH. Exiting deployment."; exit 1; }
              git checkout main || { echo "Error: Could not checkout main branch. Exiting deployment."; exit 1; }
              git pull origin main || { echo "Error: Git pull failed. Exiting deployment."; exit 1; }
            else
              echo "Repository not found. Cloning into "$DEPLOY_PATH"...
              mkdir -p "$DEPLOY_PATH"
              git clone "$REPO_URL" "$DEPLOY_PATH" || { echo "Error: Git clone failed. Exiting deployment."; exit 1; }
              cd "$DEPLOY_PATH" || { echo "Error: Could not navigate to $DEPLOY_PATH after clone. Exiting deployment."; exit 1; }
            fi

            echo "Pulling latest Docker image for chat server from Docker Hub..."
            docker-compose pull server

            echo "Restarting chat server services with the new image..."
            docker-compose up -d --force-recreate server

            echo "Deployment complete on ${{ secrets.REMOTE_HOST }}!"
